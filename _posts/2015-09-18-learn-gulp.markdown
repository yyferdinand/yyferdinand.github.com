---
layout:     post
title:      "基于流的自动化构建工具之 Gulp"
subtitle:   "通过代码优于配置的策略，Gulp 让简单的任务简单，复杂的任务可管理。"
date:       2015-09-18 11:43:00 
author:     "Fanxmistic"
header-img: "img/post/learn_gulp.jpg"
tags:
    - Gulp
    - 自动化构建工具
    - 前端
---

<div id="wmd-preview" class="wmd-preview"><div class="md-section-divider"></div><h2 data-anchor-id="cr0f" id="什么是-gulp">什么是 Gulp ?</h2><p data-anchor-id="qnq7">Gulp <a href="http://gulpjs.com" target="_blank">官方网站</a> 对于 Gulp 的定义如下：</p><blockquote data-anchor-id="wiw5" class="white-blockquote">
  <p><em>Automate and enhance your workflow</em></p>
</blockquote><p data-anchor-id="hhzg">自动化并改善你的工作流，姑且称它为自动化构建工具。</p><div class="md-section-divider"></div><h2 data-anchor-id="jsg4" id="为什么要使用-gulp">为什么要使用 Gulp ?</h2><p data-anchor-id="ifwm">在传统的前端开发环节中，我们做着大量的重复工作：</p><blockquote data-anchor-id="ip0m" class="white-blockquote">
  <p>一个项目的流程大概是：首先在某个目录下创建自己的项目目录，然后手动建立 css / img / js  等文件夹，然后手动添加 index.html 文件，每次切好的图片都放到 tinypng 中压缩一遍，有时候竟然忘记了哪些压缩过而哪些未压缩。之后在某个在线压缩 js 文件的页面进行 js文件 的混淆、压缩，然后手动修改，一不小心又删除了之前的文件等繁琐工作。</p>
  
  <p>在做过大量的重复劳动后，我们急需一个自动化工具来替我们解决这些问题</p>
</blockquote><p data-anchor-id="5nxk">于是，我们需要 Gulp 这样的利器来提高我们的效率。利用 Node流 （Streaming）的威力，你可以快速构建项目并减少频繁的 IO 操作。</p><div class="md-section-divider"></div><h2 data-anchor-id="2gjp" id="如何安装-gulp">如何安装 Gulp ?</h2><p data-anchor-id="mpjy">全局安装 <code>$ npm install gulp -g</code> <br>
安装到本地开发环境 <code>$ npm install gulp --save-dev</code> <br>
得到 package.json <code>$ npm init</code> 之后，连按空格</p><div class="md-section-divider"></div><h2 data-anchor-id="0k57" id="如何压缩-css-文件">如何压缩 CSS 文件？</h2><p data-anchor-id="8uil">得到压缩 CSS 的插件 <code>$ npm install gulp-minify-css --save-dev</code> <br>
你的项目结构目录可能如下：</p><pre data-anchor-id="hgs4"><code>├── index.html
├── css
  └── a.css
  └── b.css 
├── js
  └── a.js
  └── b.js
├── image
  └── a.png
  └── b.jpg
├── node_modules
  └── gulp-minify-css
├── package.json
</code></pre><p data-anchor-id="3fnq">在项目根目录下新建一个 gulpfile.js 文件，如下：</p><div class="md-section-divider"></div><pre class="prettyprint linenums prettyprinted" data-anchor-id="0j93"><ol class="linenums"><li class="L0"><code class="language-javascript"><span class="com">// gulpfile.js</span></code></li><li class="L1"><code class="language-javascript"></code></li><li class="L2"><code class="language-javascript"><span class="com">// 获取 gulp</span></code></li><li class="L3"><code class="language-javascript"><span class="kwd">var</span><span class="pln"> gulp </span><span class="pun">=</span><span class="pln"> require</span><span class="pun">(</span><span class="str">'gulp'</span><span class="pun">);</span></code></li><li class="L4"><code class="language-javascript"><span class="com">//  获取 minify-css 模块（用于压缩 CSS）</span></code></li><li class="L5"><code class="language-javascript"><span class="kwd">var</span><span class="pln"> minifyCSS </span><span class="pun">=</span><span class="pln"> require</span><span class="pun">(</span><span class="str">'gulp-minify-css'</span><span class="pun">);</span></code></li><li class="L6"><code class="language-javascript"></code></li><li class="L7"><code class="language-javascript"><span class="com">// 压缩 css 文件</span></code></li><li class="L8"><code class="language-javascript"><span class="com">// 在命令行使用 gulp css 启动此任务</span></code></li><li class="L9"><code class="language-javascript"><span class="pln">gulp</span><span class="pun">.</span><span class="pln">task</span><span class="pun">(</span><span class="str">'css'</span><span class="pun">,</span><span class="kwd">function</span><span class="pun">(){</span></code></li><li class="L0"><code class="language-javascript"><span class="pln">    gulp</span><span class="pun">.</span><span class="pln">src</span><span class="pun">(</span><span class="str">'css/*.css'</span><span class="pun">)</span></code></li><li class="L1"><code class="language-javascript"><span class="pln">        </span><span class="pun">.</span><span class="pln">pipe</span><span class="pun">(</span><span class="pln">minifyCSS</span><span class="pun">())</span></code></li><li class="L2"><code class="language-javascript"><span class="pln">        </span><span class="pun">.</span><span class="pln">pipe</span><span class="pun">(</span><span class="pln">gulp</span><span class="pun">.</span><span class="pln">dest</span><span class="pun">(</span><span class="str">'dist/css'</span><span class="pun">))</span></code></li><li class="L3"><code class="language-javascript"><span class="pun">})</span></code></li><li class="L4"><code class="language-javascript"></code></li><li class="L5"><code class="language-javascript"><span class="com">// 初始化并监听</span></code></li><li class="L6"><code class="language-javascript"><span class="com">// 在命令行使用 gulp 启动此任务，当有 .css 文件改变时，便会自动压缩；</span></code></li><li class="L7"><code class="language-javascript"><span class="pln">gulp</span><span class="pun">.</span><span class="pln">task</span><span class="pun">(</span><span class="str">'default'</span><span class="pun">,[</span><span class="str">'css'</span><span class="pun">],</span><span class="kwd">function</span><span class="pun">(){</span></code></li><li class="L8"><code class="language-javascript"><span class="pln">    gulp</span><span class="pun">.</span><span class="pln">watch</span><span class="pun">(</span><span class="str">'css/*.css'</span><span class="pun">,[</span><span class="str">'css'</span><span class="pun">])</span></code></li><li class="L9"><code class="language-javascript"><span class="pun">})</span></code></li></ol></pre><p data-anchor-id="1h9y">这里简单说一下 gulp 主要用到的几个方法：</p><dl data-anchor-id="bked">
<dt>gulp.src(globs[, options])</dt>
<dd>需要处理的任务的路径，第一个参数匹配要处理的对应路径的文件即可。</dd>

<dt>gulp.dest(path[, options])</dt>
<dd>完成任务后的文件存放路径。</dd>

<dt>gulp.watch(glob[, opts], tasks)</dt>
<dd>如果被监视的文件发生了改变就执行某些动作。(使用后控制台在中任务后不会停止，需要手动按Ctrl + C来停止)</dd>

<dt>gulp.task(name[, deps], fn)</dt>
<dd>定义一个任务。</dd>
</dl><p data-anchor-id="po0x"><strong>默认情况下，任务将被最大限度的并发执行。</strong>例如，所有任务同时被启动执行并且不做任何等待。如果你想让任务按照一个特定的顺序执行，在需要执行的任务的 task 的第二个参数指明需要依赖的任务项，这样被指明的依赖项会在该任务之前完成。</p><p data-anchor-id="dyar">每个方法的具体用法可以参见 <a href="https://github.com/gulpjs/gulp/blob/master/docs/getting-started.md" target="_blank">gulp官方文档</a> 。</p><div class="md-section-divider"></div><h2 data-anchor-id="k06y" id="如何真正地做到自动化">如何真正地做到自动化？</h2><p data-anchor-id="vy4l">当你像上述编写 gulpfile.js 后，当有 .css文件 改变时，就会自动压缩；可是如果我的 .js文件 改变呢？当我的 .png文件 改变呢？......</p><p data-anchor-id="dout">首先，我们需要安装相应的插件 <code>$ npm install gulp-uglify gulp-imagemin imagemin-pngquant --save-dev</code> <br>
然后，编写 gulpfile.js 文件，如下：</p><div class="md-section-divider"></div><pre class="prettyprint linenums prettyprinted" data-anchor-id="tuo2"><ol class="linenums"><li class="L0"><code class="language-javascript"><span class="com">// gulpfile.js</span></code></li><li class="L1"><code class="language-javascript"></code></li><li class="L2"><code class="language-javascript"><span class="com">// 获取 gulp</span></code></li><li class="L3"><code class="language-javascript"><span class="kwd">var</span><span class="pln"> gulp </span><span class="pun">=</span><span class="pln"> require</span><span class="pun">(</span><span class="str">'gulp'</span><span class="pun">);</span></code></li><li class="L4"><code class="language-javascript"></code></li><li class="L5"><code class="language-javascript"><span class="com">//  获取模块</span></code></li><li class="L6"><code class="language-javascript"><span class="kwd">var</span><span class="pln"> minifyCSS </span><span class="pun">=</span><span class="pln"> require</span><span class="pun">(</span><span class="str">'gulp-minify-css'</span><span class="pun">);</span></code></li><li class="L7"><code class="language-javascript"><span class="kwd">var</span><span class="pln"> uglifyJS </span><span class="pun">=</span><span class="pln"> require</span><span class="pun">(</span><span class="str">'gulp-uglify'</span><span class="pun">);</span></code></li><li class="L8"><code class="language-javascript"><span class="kwd">var</span><span class="pln"> imagemin </span><span class="pun">=</span><span class="pln"> require</span><span class="pun">(</span><span class="str">'gulp-imagemin'</span><span class="pun">);</span></code></li><li class="L9"><code class="language-javascript"><span class="kwd">var</span><span class="pln"> pngquant </span><span class="pun">=</span><span class="pln"> require</span><span class="pun">(</span><span class="str">'imagemin-pngquant'</span><span class="pun">);</span></code></li><li class="L0"><code class="language-javascript"></code></li><li class="L1"><code class="language-javascript"><span class="com">// 压缩 css 文件</span></code></li><li class="L2"><code class="language-javascript"><span class="com">// 在命令行使用 gulp css 启动此任务</span></code></li><li class="L3"><code class="language-javascript"><span class="pln">gulp</span><span class="pun">.</span><span class="pln">task</span><span class="pun">(</span><span class="str">'css'</span><span class="pun">,</span><span class="kwd">function</span><span class="pun">(){</span></code></li><li class="L4"><code class="language-javascript"><span class="pln">    gulp</span><span class="pun">.</span><span class="pln">src</span><span class="pun">(</span><span class="str">'css/*.css'</span><span class="pun">)</span></code></li><li class="L5"><code class="language-javascript"><span class="pln">        </span><span class="pun">.</span><span class="pln">pipe</span><span class="pun">(</span><span class="pln">minifyCSS</span><span class="pun">())</span></code></li><li class="L6"><code class="language-javascript"><span class="pln">        </span><span class="pun">.</span><span class="pln">pipe</span><span class="pun">(</span><span class="pln">gulp</span><span class="pun">.</span><span class="pln">dest</span><span class="pun">(</span><span class="str">'dist/css'</span><span class="pun">))</span></code></li><li class="L7"><code class="language-javascript"><span class="pun">})</span></code></li><li class="L8"><code class="language-javascript"></code></li><li class="L9"><code class="language-javascript"><span class="com">// 压缩 js 文件</span></code></li><li class="L0"><code class="language-javascript"><span class="com">// 在命令行使用 gulp script 启动此任务</span></code></li><li class="L1"><code class="language-javascript"><span class="pln">gulp</span><span class="pun">.</span><span class="pln">task</span><span class="pun">(</span><span class="str">'script'</span><span class="pun">,</span><span class="kwd">function</span><span class="pun">(){</span></code></li><li class="L2"><code class="language-javascript"><span class="pln">    gulp</span><span class="pun">.</span><span class="pln">src</span><span class="pun">(</span><span class="str">'js/*.js'</span><span class="pun">)</span></code></li><li class="L3"><code class="language-javascript"><span class="pln">        </span><span class="pun">.</span><span class="pln">pipe</span><span class="pun">(</span><span class="pln">uglifyJS</span><span class="pun">())</span></code></li><li class="L4"><code class="language-javascript"><span class="pln">        </span><span class="pun">.</span><span class="pln">pipe</span><span class="pun">(</span><span class="pln">gulp</span><span class="pun">.</span><span class="pln">dest</span><span class="pun">(</span><span class="str">'dist/js'</span><span class="pun">))</span></code></li><li class="L5"><code class="language-javascript"><span class="pun">})</span></code></li><li class="L6"><code class="language-javascript"></code></li><li class="L7"><code class="language-javascript"><span class="com">// 压缩 图片 文件</span></code></li><li class="L8"><code class="language-javascript"><span class="com">// 在命令行使用 gulp image 启动此任务</span></code></li><li class="L9"><code class="language-javascript"><span class="pln">gulp</span><span class="pun">.</span><span class="pln">task</span><span class="pun">(</span><span class="str">'image'</span><span class="pun">,</span><span class="kwd">function</span><span class="pun">(){</span></code></li><li class="L0"><code class="language-javascript"><span class="pln">    gulp</span><span class="pun">.</span><span class="pln">src</span><span class="pun">(</span><span class="str">'image/*'</span><span class="pun">)</span></code></li><li class="L1"><code class="language-javascript"><span class="pln">        </span><span class="pun">.</span><span class="pln">pipe</span><span class="pun">(</span><span class="pln">imagemin</span><span class="pun">({</span></code></li><li class="L2"><code class="language-javascript"><span class="pln">            progressive</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">,</span></code></li><li class="L3"><code class="language-javascript"><span class="pln">            svgoPlugins</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[{</span><span class="pln">removeViewBox</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">}],</span></code></li><li class="L4"><code class="language-javascript"><span class="pln">            use</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln">pngquant</span><span class="pun">()]</span></code></li><li class="L5"><code class="language-javascript"><span class="pln">        </span><span class="pun">}))</span></code></li><li class="L6"><code class="language-javascript"><span class="pln">        </span><span class="pun">.</span><span class="pln">pipe</span><span class="pun">(</span><span class="pln">gulp</span><span class="pun">.</span><span class="pln">dest</span><span class="pun">(</span><span class="str">'dist/image'</span><span class="pun">));</span></code></li><li class="L7"><code class="language-javascript"><span class="pun">})</span></code></li><li class="L8"><code class="language-javascript"></code></li><li class="L9"><code class="language-javascript"><span class="com">// 初始化并监听</span></code></li><li class="L0"><code class="language-javascript"><span class="com">// 在命令行使用 gulp 启动此任务，当有文件改变时，便会自动压缩；</span></code></li><li class="L1"><code class="language-javascript"><span class="com">//        使用 ctrl c 停止</span></code></li><li class="L2"><code class="language-javascript"><span class="pln">gulp</span><span class="pun">.</span><span class="pln">task</span><span class="pun">(</span><span class="str">'default'</span><span class="pun">,[</span><span class="str">'css'</span><span class="pun">,</span><span class="str">'script'</span><span class="pun">,</span><span class="str">'image'</span><span class="pun">],</span><span class="kwd">function</span><span class="pun">(){</span></code></li><li class="L3"><code class="language-javascript"><span class="pln">    gulp</span><span class="pun">.</span><span class="pln">watch</span><span class="pun">(</span><span class="str">'css/*.css'</span><span class="pun">,[</span><span class="str">'css'</span><span class="pun">]);</span></code></li><li class="L4"><code class="language-javascript"><span class="pln">    gulp</span><span class="pun">.</span><span class="pln">watch</span><span class="pun">(</span><span class="str">'js/*.js'</span><span class="pun">,[</span><span class="str">'script'</span><span class="pun">]);</span></code></li><li class="L5"><code class="language-javascript"><span class="pln">    gulp</span><span class="pun">.</span><span class="pln">watch</span><span class="pun">(</span><span class="str">'image/*'</span><span class="pun">,[</span><span class="str">'image'</span><span class="pun">]);</span></code></li><li class="L6"><code class="language-javascript"><span class="pun">})</span></code></li></ol></pre><p data-anchor-id="zz1l">接着，你的项目结构可能会变成如下：</p><pre data-anchor-id="xp5j"><code>├── index.html
├── css
  └── a.css
  └── b.css 
├── js
  └── a.js
  └── b.js
├── image
  └── a.png
  └── b.jpg
├── node_modules
  └── gulp-uglify
  └── gulp-uglify
  └── gulp-imagemin
  └── imagemin-pngquant
├── package.json
├── gulpfile.js
├── dist
  └── js/
  └── css/
  └── image/
</code></pre><p data-anchor-id="ny28">最后，如果你还需要其他插件，同理即可。</p><div class="md-section-divider"></div><h2 data-anchor-id="9wzn" id="小结">小结</h2><p data-anchor-id="6vch">本文只是记录了自己学习 Gulp 的心得体会，能给看到这篇文章的人起到参考作用已足够。不适当之处在所难免，希望能联系我指正，感谢。</p></div>